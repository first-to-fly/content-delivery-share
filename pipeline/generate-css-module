#!/usr/bin/env bash

# shellcheck source=./lib/bash/core.sh
source "${BASH_SOURCE[0]%/*}/../lib/bash/core.sh"

# shellcheck source=./lib/bash/node.sh
source "${BASH_SOURCE[0]%/*}/../lib/bash/node.sh"

function main() {

  FILE="${1:-}"

  if [[ -z "${FILE}" ]]; then

    find . \
      -type f \
      \( \
      -iname "*.css" \
      -o \
      -iname "*.scss" \
      -o \
      -iname "*.less" \
      -o \
      -iname "*.sss" \
      \) |
      while IFS= read -r OTHER_FILE; do
        echo "${OTHER_FILE}"
      done

    return
  fi

  NPM="$(command -v npm)"

  if ! "${NPM}" --global list --depth=0 | grep " node-sass@" >/dev/null; then
    (
      set -x
      "${NPM}" install --global "node-sass"
    )
  fi

  if ! "${NPM}" --global list --depth=0 | grep " typed-scss-modules@" >/dev/null; then
    (
      set -x
      "${NPM}" install --global "typed-scss-modules"
    )
  fi

  NPM_BIN="$("${NPM}" --global bin)"

  (
    set -x
    "${NPM_BIN}/tsm" "${FILE}"
  )

  HEADER_FILE="${FILE}.d.ts"

  if [[ -f "${HEADER_FILE}" ]]; then

    CONTENT="$(cat "${HEADER_FILE}")"
    echo "/* eslint-disable import/prefer-default-export */" >"${HEADER_FILE}"
    echo "${CONTENT}" >>"${HEADER_FILE}"

    NPX="$(command -v npx)"

    (
      set -x

      "${NPX}" prettier \
        --write \
        "${HEADER_FILE}"

      "${NPX}" eslint \
        --fix \
        --no-ignore \
        "${HEADER_FILE}"
    )

  fi

}

main "$@"
