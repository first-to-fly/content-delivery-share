#!/usr/bin/env bash

# shellcheck disable=SC1090
source "${BASH_SOURCE[0]%/*}/../lib/bash/core.sh"

dependency "aws"
dependency "envkey-source"

# shellcheck disable=SC2034
NAME="$(git config --get remote.origin.url | sed "s|.*/\([^.]*\)\.git|\1|g")"

# shellcheck disable=SC2034
PLAN_FILE="./terraform.tfplan"

function main() {

  if [[ -z "${DEPLOY_ENVKEY:-}" && -f "./.env" ]]; then
    while IFS='' read -r LINE; do
      if [[ "${LINE}" == *"="* && "${LINE}" != "#"* ]]; then
        export "${LINE?}"
      fi
    done <"./.env"
  fi

  if [[ -z "${DEPLOY_ENVKEY:-}" ]]; then
    echo "ERROR: Missing DEPLOY_ENVKEY." >&2
    exit 1
  fi

  eval "$(envkey-source "${DEPLOY_ENVKEY}")"

  if [[ -z "${AWS_DEFAULT_REGION:-}" ]]; then
    local AWS_DEFAULT_REGION="us-east-1"
    export AWS_DEFAULT_REGION="${AWS_DEFAULT_REGION}"
  fi

  cat <<'EOF' >"${BASH_SOURCE[0]%/*}/variables.tfvars"
aws_access_key = "__AWS_ACCESS_KEY_ID__"
aws_secret_key = "__AWS_SECRET_ACCESS_KEY__"
name = "__NAME__"
subnet_name = "__SUBNET_NAME__"
load_balancer_name = "__LOAD_BALANCER_NAME__"
namespace_id = "__NAMESPACE_ID__"
service_envkey = "__SERVICE_ENVKEY__"
image_tag = "__IMAGE_TAG__"
image_id = "__IMAGE_ID__"
EOF

  if [[ -n "${AWS_NAMESPACE:-}" ]]; then
    NAMESPACE_ID="$(
      aws servicediscovery list-namespaces |
        jq -r ".Namespaces[] | select(.Name == \"${AWS_NAMESPACE}\") | .Id"
    )"
    sed -i "" -e "s|__NAMESPACE_ID__|${NAMESPACE_ID}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  fi

  if [[ -n "${AWS_SUBNET:-}" ]]; then
    sed -i "" -e "s|__SUBNET_NAME__|${AWS_SUBNET}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  fi

  if [[ -n "${AWS_LOAD_BALANCER:-}" ]]; then
    sed -i "" -e "s|__LOAD_BALANCER_NAME__|${AWS_LOAD_BALANCER}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  fi

  if [[ -n "${SERVICE_ENVKEY:-}" ]]; then
    sed -i "" -e "s|__SERVICE_ENVKEY__|${SERVICE_ENVKEY}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  fi

  local IMAGE_ID
  if [[ -z "$(jq -r ".image_id" "${BASH_SOURCE[0]%/*}/terraform.config.json")" ]]; then
    IMAGE_ID="$(aws ssm get-parameters --names /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id --region us-east-1 | jq -r ".Parameters[0].Value")"
    # shellcheck disable=SC2094
    cat <<<"$(jq -r ".image_id = \"${IMAGE_ID}\"" "${BASH_SOURCE[0]%/*}/terraform.config.json")" >"${BASH_SOURCE[0]%/*}/terraform.config.json"
  else
    IMAGE_ID="$(jq -r ".image_id" "${BASH_SOURCE[0]%/*}/terraform.config.json")"
  fi

  sed -i "" -e "s|__AWS_ACCESS_KEY_ID__|${AWS_ACCESS_KEY_ID}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  sed -i "" -e "s|__AWS_SECRET_ACCESS_KEY__|${AWS_SECRET_ACCESS_KEY}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  sed -i "" -e "s|__NAME__|${NAME}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  sed -i "" -e "s|__IMAGE_TAG__|$(git rev-parse --short HEAD)|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
  sed -i "" -e "s|__IMAGE_ID__|${IMAGE_ID}|g" "${BASH_SOURCE[0]%/*}/variables.tfvars"
}

main "$@"
